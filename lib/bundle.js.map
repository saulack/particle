{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/circles.js","webpack:///./lib/particle.js","webpack:///./lib/player.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,kBAAkB;;AAElB,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;;AAEA,mBAAmB,sBAAsB;AACzC;;;AAGA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;AC1ED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,WAAW;AACvC,4BAA4B,WAAW;AACvC;;AAEA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;;;AAGA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/particle.js\");\n","class Circle  {\n  constructor(x, y, radius, dx, dy, id, type) {\n    this.id = id\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.dx = dx;\n    this.dy = dy;\n    this.type = type\n    this.draw = this.draw.bind(this);\n    this.getDistance = this.getDistance.bind(this);\n  }\n\n\n  draw() {\n    let fillColor;\n    let strokeColor;\n    let width;\n    if (this.type === 'power up') {\n      strokeColor = '#8005ff';\n      fillColor = '#06ffe5'\n      width = 10\n    } else {\n      fillColor = '#46008E';\n      strokeColor = '#00685D'\n      width = 1\n    }\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      ctx.strokeStyle = strokeColor;\n      ctx.fillStyle = fillColor;\n      ctx.lineWidth= width;\n      ctx.stroke();\n      ctx.fill();\n  }\n\n  getDistance(x1, y1, x2, y2) {\n    let xDistance = x1 - x2;\n    let yDistance = y1 - y2;\n    return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2));\n  }\n\n  drawExplode(size){\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, (this.radius * size), 0, Math.PI * 2, false);\n    ctx.strokeStyle = 'red';\n    ctx.fillStyle = 'rgb(164, 74, 0.1)';\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  update(){\n    if (this.x < 0) {\n      this.x = Math.random() * 1400;\n      this.y = 0;\n    } else if (this.y > 600) {\n      this.x = 0;\n      this.y = Math.random() * 700;\n    }\n\n    this.x += -this.dx;\n    this.y += this.dy;\n    this.draw('#46008E',);\n  }\n}\n\nexport default Circle;\n","\nimport Circle from './circles';\nimport Player from './player';\n// import PowerUp from './powerups';\n// let firebase = require(\"firebase/app\");\n// let fireDatabase = require(\"firebase/database\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  //\n  // let config = {\n  //   apiKey: \"AIzaSyC8MRoQiQPGTS--vjCiOEwR56SbvngsBqM\",\n  //   authDomain: \"particle-28f5e.firebaseapp.com\",\n  //   databaseURL: \"https://particle-28f5e.firebaseio.com\",\n  //   projectId: \"particle-28f5e\",\n  //   storageBucket: \"\",\n  //   messagingSenderId: \"511295939823\"\n  // };\n  // firebase.initializeApp(config);\n  // let database = firebase.database();\n\n  window.canvas = document.getElementById('canvas');\n  window.ctx = canvas.getContext('2d');\n  window.mouse = {\n    x: null,\n    y: null\n  };\n  window.player = new Player(mouse.x, mouse.y, 3, mouse.x, mouse.y, 15545, null, 5, 0)\n  canvas.addEventListener('mousemove', function(event) {\n    player.x = event.x - canvas.offsetLeft;\n    player.y = event.y - canvas.offsetTop;\n  });\n\n\nconst resetGlobalVariables = () => {\n  window.player = new Player(mouse.x, mouse.y, 3, mouse.x, mouse.y, 15545, null, 5, 0)\n  window.canvas = document.getElementById('canvas');\n  window.ctx = canvas.getContext('2d');\n  window.mouse = { x: 0, y: 0 };\n\n  for (let i = 0; i < circleArr.length; i++) {\n    circleArr[i].x = 1000;\n    circleArr[i].y = 0;\n  }\n}\n\n  window.circleArr = [];\n  const powerUp = new Circle(999, 1, 6, 1, 1, 6168, 'power up' )\n  circleArr.push(powerUp)\n    for (let i = 0; i < 150; i++) {\n      let dx = Math.random() * 1.5;\n      let dy = Math.random() * 1.5;\n      let radius = (1 + Math.random()) * 2;\n      circleArr.push(new Circle(999, 1, radius, dx, dy, i, 'particle'));\n    }\n\n  const animate = () => {\n    requestAnimationFrame(animate);\n    ctx.clearRect(0, 0, innerWidth, innerHeight);\n    player.update(circleArr);\n    if (player.lives >= 0) {\n      document.addEventListener('keypress', () => {\n        resetGlobalVariables()\n      });\n\n    }\n\n    for (let i = 0; i < circleArr.length; i++) {\n      circleArr[i].update(circleArr);\n\n\n    };\n  };\n  animate();\n});\n","import Circle from './circles';\n\nclass Player extends Circle {\n  constructor(x, y, radius, dx, dy, id, type, lives, score) {\n    super();\n    this.id = id\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.lives = lives;\n    this.score = score\n    this.history = [];\n    this.level = 1;\n  }\n\n  drawPlayer() {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    ctx.strokeStyle = 'rgb(5, 0, 255)';\n    ctx.fillStyle = 'red';\n    ctx.stroke();\n    ctx.fill();\n\n    this.drawInfo(`Lives: ${this.lives}`, 5, 20, 12, \"white\");\n    this.drawInfo(`Score: ${this.score}`, 80, 20, 12, \"white\");\n  }\n\n  drawInfo(text, x, y, size, color) {\n    ctx.font = `${size}px Arial`;\n    ctx.fillStyle = color;\n    ctx.fillText(text, x, y);\n  }\n\n drawTrail(x, y, radius) {\n   if (!(x === this.x && y === this.y)) {\n     let colors = ['#05297D', '#1147C2', '#1147C2', '#1A5FFF', '#7FA6FF'];\n     let randomColor = colors[Math.floor(Math.random() * colors.length)];\n     ctx.beginPath();\n     ctx.arc(x, y, radius + 1, 0, Math.PI * 2, false);\n     ctx.strokeStyle = randomColor;\n     ctx.stroke();\n   }\n }\n\n collisionDetect(particles) {\n   for (let i = 0; i < particles.length; i++ ) {\n     if (particles[i].getDistance(particles[i].x, particles[i].y,\n       this.x, this.y) - particles[i].radius * 2 <= 0) {\n\n         if (particles[i].type === 'particle') {\n          let size = [6, 5, 4, 3, 2, 1];\n          particles[i].drawExplode(size[this.lives] * 20);\n          particles[i].x = 0;\n          particles[i].y = 600;\n          return 'particle';\n\n        } else if (particles[i].type === 'power up') {\n          particles[i].x = -40;\n          particles[i].y = 600;\n          return 'power up';\n        }\n      }\n    }\n   return false;\n  }\n\n\n checkCollisions(particles) {\n   const col = this.collisionDetect(particles)\n   if (col === 'particle') {\n     this.lives -= 1;\n   }\n   if (col === 'power up') {\n     let bonus = Math.floor(Math.random() * 100)\n     this.score += bonus\n     this.drawInfo(`${bonus}`, this.x, this.y, 100, 'rgb(31, 203, 43)')\n   }\n }\n\n endGame() {\n   this.drawInfo(\"GAME OVER\", 500, 300, 80, \"#46008E\");\n   this.drawPlayer();\n   this.drawInfo(\"press space to play again\", 600, 400, 20, \"#46008E\");\n   if (this.history.length < 300) {\n    this.history.push([this.x, this.y]);\n   } else {\n    this.history.shift();\n    this.history.push([this.x, this.y]);\n   }\n   for (let i = 0; i < this.history.length; i++) {\n     let prevPos = this.history[i];\n    this.drawTrail(prevPos[0], prevPos[1], i/15);\n   }\n }\n\n  checkTail() {\n    if (this.history.length < 20) {\n      this.history.push([this.x, this.y]);\n    } else {\n      this.history.shift();\n      this.history.push([this.x, this.y]);\n    }\n  }\n\n  speedUp(particles) {\n    let currScore = 0;\n    let addScore = 2000;\n    for (let i = 0; i < particles.length; i++) {\n      particles[i].dx += .0002;\n        particles[i].dy += .0002;\n      }\n    }\n\n update(particles) {\n  if (this.lives > 0) {\n    for (let i = 0; i < this.history.length; i++) {\n      let prevPos = this.history[i];\n      this.drawTrail(prevPos[0], prevPos[1], i / 3);\n    }\n    this.score += 1;\n\n    this.checkCollisions(particles)\n    this.checkTail()\n    this.drawPlayer();\n    this.speedUp(particles)\n  } else {\n    this.endGame();\n    this.drawInfo(`Score: ${this.score}`, 650, 450, 20, \"#46008E\");\n  }\n }\n}\n\n\nexport default Player;\n"],"sourceRoot":""}